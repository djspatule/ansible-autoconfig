- name: Determine available wxWidgets dev package
  ansible.builtin.shell: |
    set -e
    if apt-cache show libwxgtk3.2-dev >/dev/null 2>&1; then echo libwxgtk3.2-dev; exit 0; fi
    if apt-cache show libwxgtk3.3-dev >/dev/null 2>&1; then echo libwxgtk3.3-dev; exit 0; fi
    exit 1
  args:
    executable: /bin/bash
  register: wx_pkg
  changed_when: false
  failed_when: wx_pkg.rc != 0

- name: Install system build dependencies
  apt:
    name:
      - build-essential
      - curl
      - git
      - wl-clipboard
      - libxkbcommon-dev
      - libdbus-1-dev
      - libssl-dev
      - "{{ wx_pkg.stdout }}"
    state: present
    update_cache: yes
  become: yes

- name: Ensure Rust toolchain (rustup) is installed for desktop user
  ansible.builtin.shell: |
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  args:
    executable: /bin/bash
    creates: "{{ desktop_home }}/.cargo/bin/rustc"
  become_user: "{{ desktop_user }}"

  

- name: Clone Espanso repository
  git:
    repo: "https://github.com/federico-terzi/espanso.git"
    dest: "{{ espanso_src }}"
    update: yes
  become_user: "{{ desktop_user }}"

- name: Compile Espanso binary for Wayland (no X11)
  shell: |
    export PATH="{{ desktop_home }}/.cargo/bin:$PATH"
    cargo build -p espanso --release --no-default-features --features modulo,vendored-tls,wayland
  args:
    chdir: "{{ espanso_src }}"
  become_user: "{{ desktop_user }}"

- name: Move espanso binary to /usr/local/bin
  copy:
    src: "{{ espanso_src }}/target/release/espanso"
    dest: /usr/local/bin/espanso
    mode: '0755'
  become: yes

- name: Grant CAP_DAC_OVERRIDE capability to espanso binary
  command: setcap "cap_dac_override+p" /usr/local/bin/espanso
  become: yes

- name: Register Espanso systemd service for user
  become_user: "{{ desktop_user }}"
  command: espanso service register
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Start Espanso service
  become_user: "{{ desktop_user }}"
  command: espanso start
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Confirm Espanso is running
  become_user: "{{ desktop_user }}"
  command: espanso status
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  register: espanso_status

- name: Show Espanso status
  debug:
    var: espanso_status.stdout_lines

- name: Ensure espanso config directories exist
  become_user: "{{ desktop_user }}"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0700'
  loop:
    - "{{ desktop_home }}/.config/espanso/match"
    - "{{ desktop_home }}/.config/espanso/config"

- name: Deploy espanso base.yml config
  become_user: "{{ desktop_user }}"
  copy:
    src: files/espanso/base.yml
    dest: "{{ desktop_home }}/.config/espanso/match/base.yml"
    mode: '0600'

- name: Deploy espanso default.yml (FR keyboard)
  become_user: "{{ desktop_user }}"
  copy:
    src: files/espanso/default.yml
    dest: "{{ desktop_home }}/.config/espanso/config/default.yml"
    mode: '0600'
