 - name: Ensure prerequisites for DEB install
   ansible.builtin.package:
    name:
      - wget
      - libcap2-bin
  become: yes

 - name: Check espanso current version (if any)
  ansible.builtin.command: espanso --version
  register: espanso_version
  changed_when: false
  failed_when: false

 - name: Debug current espanso version
  ansible.builtin.debug:
    var: espanso_version.stdout

 - name: Download latest Espanso DEB (wayland amd64)
  ansible.builtin.get_url:
    url: "https://github.com/espanso/espanso/releases/latest/download/espanso-debian-wayland-amd64.deb"
    dest: "/tmp/espanso-debian-wayland-amd64.deb"
    mode: '0644'
  when: espanso_version.rc != 0

 - name: Install Espanso DEB
  apt:
    deb: "/tmp/espanso-debian-wayland-amd64.deb"
    state: present
  become: yes
  when: espanso_version.rc != 0

 - name: Ensure capability set on espanso binary
  ansible.builtin.shell: setcap "cap_dac_override+p" $(which espanso)
  args:
    executable: /bin/bash
  become: yes
  register: espanso_cap_set
  changed_when: true
  failed_when: false

 - name: Verify capability is present
  ansible.builtin.shell: |
    set -o pipefail
    getcap $(which espanso) | grep -q cap_dac_override
  args:
    executable: /bin/bash
  register: espanso_cap_check
  changed_when: false
  failed_when: false

 - name: Debug capability result
  ansible.builtin.debug:
    msg:
      - "setcap rc: {{ espanso_cap_set.rc }}"
      - "cap present: {{ espanso_cap_check.rc == 0 }}"

 - name: Register Espanso service (idempotent)
  ansible.builtin.command: espanso service register
  become_user: "{{ desktop_user }}"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  register: espanso_register
  changed_when: "'creating service file' in (espanso_register.stdout | default(''))"
  failed_when: false

 - name: Debug register output
  ansible.builtin.debug:
    var: espanso_register.stdout

 - name: Start Espanso
  ansible.builtin.command: espanso start
  become_user: "{{ desktop_user }}"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  register: espanso_start
  changed_when: "'already running' not in (espanso_start.stdout | default('') + ' ' + espanso_start.stderr | default(''))"
  failed_when: false

 - name: Check Espanso status
  ansible.builtin.command: espanso status
  become_user: "{{ desktop_user }}"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  register: espanso_status
  changed_when: false
  failed_when: false

 - name: Debug espanso status
  ansible.builtin.debug:
    msg:
      - "version: {{ espanso_version.stdout | default('n/a') }}"
      - "start: {{ espanso_start.stdout | default('n/a') }}"
      - "status: {{ espanso_status.stdout | default('n/a') }}"

 - name: Ensure espanso config directories exist
  become_user: "{{ desktop_user }}"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0700'
  loop:
    - "{{ desktop_home }}/.config/espanso/match"
    - "{{ desktop_home }}/.config/espanso/config"

 - name: Deploy espanso base.yml config
  become_user: "{{ desktop_user }}"
  copy:
    src: files/espanso/base.yml
    dest: "{{ desktop_home }}/.config/espanso/match/base.yml"
    mode: '0600'

 - name: Deploy espanso default.yml (FR keyboard)
  become_user: "{{ desktop_user }}"
  copy:
    src: files/espanso/default.yml
    dest: "{{ desktop_home }}/.config/espanso/config/default.yml"
    mode: '0600'


