- name: install apt packages
  ansible.builtin.package:
    name:
      # CLI utilities
      - btop
      - python3-psutil
      - micro
      - fastfetch
      - pdfgrep
      - tldr
      - ncdu
      - mc
      - bat
      - clamav
      - rclone
      - cowsay
      - oneko
      - cmatrix
      - eza
      - sl
      - tree
      - ripgrep
      - flatpak
      # Media
      - vlc
      - drawing
      - imagemagick
      # Office
      - libreoffice
      - firefox
      - xournalpp
      #- insync-nautilus TO BE REPAIRED WITH THE CORRECT APT SOURCES? /etc/apt/sources.list.d/ubuntu.sources
      # GNOME
      - catfish
      - gnome-tweaks
      - gir1.2-gtop-2.0
      - lm-sensors
      - gnome-shell-extensions
      - gnome-shell-extension-manager
      - gnome-shell-extension-gsconnect
    state: present
    update_cache: yes
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Install snap packages
  community.general.snap:
    name: "{{ item }}"
    state: present
  loop:
    - tigervnc
    - colorwall
    - slack
    - spotify
    - vivaldi
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Add Flathub remote
  community.general.flatpak_remote:
    name: flathub
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
    state: present
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Install Flatpak packages
  community.general.flatpak:
    name: "{{ item }}"
    state: present
  loop:
    - us.zoom.Zoom
    - com.github.finefindus.eyedropper
    - org.flameshot.Flameshot
    - eu.betterbird.Betterbird
    - org.onlyoffice.desktopeditors
    - com.rustdesk.RustDesk
    - com.sublimetext.three
  when: ansible_distribution in ["Debian", "Ubuntu"]
  #ignore_errors: yes

- name: Allow org.flameshot.Flameshot to take screenshots
  become: yes
  become_user: "{{ desktop_user }}"
  ansible.builtin.command: >
    flatpak permission-set screenshot screenshot org.flameshot.Flameshot yes
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ lookup('ansible.builtin.pipe', 'id -u ' + desktop_user) }}"
  when: ansible_distribution in ["Debian", "Ubuntu"]

# AM-application-manager

- name: Download AM-application-manager INSTALL script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ivan-hc/AM/main/INSTALL
    dest: /tmp/AM_INSTALL
    mode: '0755'

- name: Run AM-application-manager INSTALL script
  ansible.builtin.command: /tmp/AM_INSTALL
  become: yes

- name: Remove AM-application-manager INSTALL script
  ansible.builtin.file:
    path: /tmp/AM_INSTALL
    state: absent
  become: yes

- name: Install Beeper and OrcaSlicer AppImages using AM (auto-confirm prompts)
  become_user: "{{ desktop_user }}"
  ansible.builtin.shell: |
    yes | am -i beeper
    yes | am -i orcaslicer-any
  args:
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Update AppImages with AM
  become_user: "{{ desktop_user }}"
  ansible.builtin.shell: am -u
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
